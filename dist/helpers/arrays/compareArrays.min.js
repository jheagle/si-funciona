"use strict";require("core-js/modules/es.symbol.js"),require("core-js/modules/es.symbol.description.js"),require("core-js/modules/es.symbol.iterator.js"),require("core-js/modules/es.array.iterator.js"),require("core-js/modules/es.string.iterator.js"),require("core-js/modules/web.dom-collections.iterator.js"),require("core-js/modules/es.array.from.js"),require("core-js/modules/es.array.slice.js"),require("core-js/modules/es.function.name.js"),require("core-js/modules/es.regexp.exec.js"),require("core-js/modules/es.regexp.test.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,require("core-js/modules/es.object.to-string.js"),require("core-js/modules/esnext.async-iterator.reduce.js"),require("core-js/modules/esnext.iterator.constructor.js"),require("core-js/modules/esnext.iterator.reduce.js"),require("core-js/modules/es.array.map.js"),require("core-js/modules/esnext.async-iterator.map.js"),require("core-js/modules/esnext.iterator.map.js"),require("core-js/modules/es.array.concat.js"),require("core-js/modules/esnext.async-iterator.every.js"),require("core-js/modules/esnext.iterator.every.js"),require("core-js/stable");const _isObject=_interopRequireDefault(require("../objects/isObject")),_mergeArrays=_interopRequireDefault(require("./mergeArrays")),_objectKeys=_interopRequireDefault(require("../objects/objectKeys"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,r){if(!e)return;if("string"==typeof e)return _arrayLikeToArray(e,r);let t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(e,r):void 0}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,o=new Array(r);t<r;t++)o[t]=e[t];return o}function _typeof(e){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)}const compareArrays=function e(){for(var r=arguments.length,t=new Array(r),o=0;o<r;o++)t[o]=arguments[o];return _mergeArrays.default.apply(void 0,t).reduce((function(r,o){const s=_typeof(o),u=Array.isArray(o),n=t.map((function(r){return r.reduce((function(r,t,n){const a=_typeof(t);if(s!==a)return r;if(!(0,_isObject.default)(o))return t===o?[].concat(_toConsumableArray(r),[n]):r;if(u!==Array.isArray(t))return r;return(u?e(o,t):e((0,_objectKeys.default)(o),(0,_objectKeys.default)(t))).every((function(e){return e.result.every((function(e){return 0===e}))}))?[].concat(_toConsumableArray(r),[n]):r}),[])})),a=n.map((function(e){return e.length?1:-1}));return[].concat(_toConsumableArray(r),[{value:o,keys:n,result:a.every((function(e){return 1===e}))?a.map((function(e){return 0})):a}])}),[])},_default=compareArrays;exports.default=_default;