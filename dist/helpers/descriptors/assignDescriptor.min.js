"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,require("core-js/modules/es.array.reduce.js"),require("core-js/modules/es.array.iterator.js"),require("core-js/modules/es.object.to-string.js"),require("core-js/modules/web.dom-collections.iterator.js"),require("core-js/modules/web.dom-collections.for-each.js"),require("core-js/modules/es.array.find.js"),require("core-js/modules/es.object.assign.js"),require("core-js/modules/es.array.map.js"),require("core-js/modules/es.array.filter.js"),require("core-js/stable");const _assignDescriptorDetail=_interopRequireDefault(require("./assignDescriptorDetail")),_cloneDescriptor=_interopRequireDefault(require("./cloneDescriptor")),_compareArrays=_interopRequireDefault(require("../arrays/compareArrays")),_uniqueArray=_interopRequireDefault(require("../arrays/uniqueArray"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const assignDescriptor=function(e){for(var r=arguments.length,t=new Array(r>1?r-1:0),s=1;s<r;s++)t[s-1]=arguments[s];return t.reduce((function(e,r){return(0,_compareArrays.default)(e.keys,r.keys).forEach((function(t){const s=e.details.find((function(e){return e.key===t.value})),i=r.details.find((function(e){return e.key===t.value}));if(t.result.every((function(e){return 0===e})))return e.details[s.index]=(0,_assignDescriptorDetail.default)(s,i),e;const n=t[0]>0?s:i;if(!n)return e.details[s.index].optional=!0,e;const u=t[0]>0?n.index:e.length;return e.details[u]=Object.assign({},n,{index:u,optional:!0}),e.length=e.length<e.details.length?e.details.length:e.length,e})),e.keys=(0,_uniqueArray.default)(e.details.map((function(e){return e.key}))),e.references=(0,_uniqueArray.default)(e.details.filter((function(e){return e.isReference})).map((function(e){return e.index}))),e.isArray=e.length?e.details.every((function(e){return"number"==typeof e.key})):e.isArray,e.complete=!e.references.length||e.complete||r.complete,e}),(0,_cloneDescriptor.default)(e))},_default=assignDescriptor;exports.default=_default;